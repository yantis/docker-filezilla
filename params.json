{"name":"Docker-filezilla","tagline":"Dockerized Filezilla","body":"# docker-filezilla\r\n\r\nOn Docker hub [filezilla](https://registry.hub.docker.com/u/yantis/filezilla)\r\non Github [filezilla](https://github.com/yantis/docker-filezilla)\r\n\r\nThis is Filezilla on Docker. It has three modes: Local (no ssh server), remote with ssh server, as\r\nwell as an optional script for an instant launch AWS EC2 for quick file transfers with \r\nstorage to EBS volume (Amazon Elastic Block Store). Check out the [aws-filezilla.sh]\r\n(https://github.com/yantis/docker-filezilla/blob/master/examples/aws-filezilla.sh) script for this.\r\nAlso, there is a script to auto create and format your EBS volume [aws-ebs-create-volume-and-format.sh]\r\n(https://github.com/yantis/docker-filezilla/blob/master/examples/aws-ebs-create-volume-and-format.sh)\r\n\r\n## Usage (Local)\r\n\r\nThe recommended way to run this container looks like this. This example launches Filezilla seamlessly as\r\nif it was another program on your computer.\r\n\r\n```bash\r\nxhost +si:localuser:$(whoami)\r\ndocker run \\\r\n        -d \\\r\n        -e DISPLAY \\\r\n        -v /tmp/.X11-unix:/tmp/.X11-unix:ro \\\r\n        -u docker \\\r\n        -v /:/host \\\r\n        -v $HOME/docker-data/filezilla:/home/docker/.config/filezilla/ \\\r\n        yantis/filezilla filezilla\r\n```\r\n\r\n## Breakdown (Local)\r\n\r\n```bash\r\n$ xhost +si:localuser:yourusername\r\n```\r\n\r\nAllows your local user to access the xsocket. Change yourusername or use $(whoami)\r\nor $USER if your shell supports it.\r\n\r\n\r\n```bash\r\ndocker run \\\r\n           -d \\\r\n           -e DISPLAY \\\r\n           -v /tmp/.X11-unix:/tmp/.X11-unix:ro \\\r\n           -u docker \\\r\n           -v /:/host \\\r\n           -v $HOME/docker-data/filezilla:/home/docker/.config/filezilla/ \\\r\n           yantis/filezilla filezilla\r\n```\r\nThis follows these docker conventions:\r\n\r\n* `-d` run in daemon mode. \r\n* `-e DISPLAY` sets the host display to the local machines display.\r\n* `-v /tmp/.X11-unix:/tmp/.X11-unix:ro` bind mounts the X11 socks on your local machine\r\nto the containers and makes it read only.\r\n* `-u docker` sets the user to docker. (or you could do root as well)\r\n* ` -v /:/host` Shares the entire host hard drive with the container (you might not want to be\r\nthat permissive so just change \"/\" to whatever path you want to allow.\r\n(This is optional but since Filezilla doesn't support FXP you might want to save the files somewhere)\r\n* `-v ~/docker-data/filezilla:/home/docker/.config/filezilla/` This is where to save your config files.\r\nIf you have no interest in saving them then it is optional.\r\n* `yantis/filezilla filezilla` You need to call filezilla because if you do not it will a launch the ssh\r\nserver instead as a default.\r\n\r\n\r\n## Usage (Remote SSH)\r\n\r\nThe recommended way to run this container over SSH looks like this. This example launches an high performance SSH\r\nserver with X-forwarding enabled. Which you can ssh -X (or -Y) into. Check out the [remote-filezilla](https://github.com/yantis/docker-filezilla/blob/master/examples/remote-filezilla.sh)\r\nand the [aws-filezilla.sh](https://github.com/yantis/docker-filezilla/blob/master/examples/aws-filezilla.sh) script for an example of this.\r\n\r\n\r\n```bash\r\ndocker run \\\r\n    -ti \\\r\n    --rm \\\r\n    -v $HOME/.ssh/authorized_keys:/authorized_keys:ro \\\r\n    -p 49158:22 \\\r\n    -v ~/docker-data/filezilla:/home/docker/.config/filezilla/ \\\r\n    yantis/filezilla\r\n```\r\n\r\n## Breakdown (Remote SSH)\r\n\r\nThis follows these docker conventions:\r\n\r\n* `-ti` will run an interactive session that can be terminated with CTRL+C.\r\n* `--rm` will run a temporary session that will make sure to remove the container on exit.\r\n* `-v $HOME/.ssh/authorized_keys:/authorized_keys:ro` Optionaly share your public keys with the host.\r\nThis is particularlly useful when you are running this on another server that already has SSH. Like an \r\nAmazon EC2 instance. WARNING: If you don't use this then it will just default to the user pass of docker/docker\r\n(If you do specify authorized keys it will disable all password logins to keep it secure).\r\n* `-v ~/docker-data/filezilla:/home/docker/.config/filezilla/` This is where to save your config files.\r\nIf you have no interest in saving them then it is optional.\r\n* ` -v /:/host` Shares the entire host hard drive with the container (you might not want to be\r\nthat permissive so just change \"/\" to whatever path you want to allow)\r\n* `yantis/filezilla` the default mode is SSH so no need to run any commands.\r\n\r\nHere is a screenshot of Filezilla running on Docker.\r\n![](http://yantis-scripts.s3.amazonaws.com/Screenshot_2015-04-10_02-01-50.png)\r\n","google":"UA-61848149-1","note":"Don't delete this file! It's used internally to help with page regeneration."}